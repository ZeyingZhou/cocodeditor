generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Profile {
  id            String         @id  // Populated by trigger with auth.users.id
  email         String         @unique
  name          String?
  projects      Project[]
  projectMembers ProjectMember[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Project {
  id            String         @id @default(uuid())
  name          String
  ownerId       String
  joinId        String         @unique @default(uuid())
  owner         Profile        @relation(fields: [ownerId], references: [id])
  members       ProjectMember[]
  folders       Folder[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model ProjectMember {
  id            String         @id @default(uuid())
  projectId     String
  profileId     String         // Changed from userId to profileId
  role          String
  project       Project        @relation(fields: [projectId], references: [id], onDelete: Cascade)
  profile       Profile        @relation(fields: [profileId], references: [id], onDelete: Cascade) // Changed from user to profile
  createdAt     DateTime       @default(now())

  @@unique([projectId, profileId]) // Updated unique constraint
}

model Folder {
  id            String         @id @default(uuid())
  name          String
  projectId     String
  files         File[]
  project       Project        @relation(fields: [projectId], references: [id], onDelete: Cascade)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model File {
  id            String         @id @default(uuid())
  name          String
  content       String         @db.Text
  folderId      String
  folder        Folder         @relation(fields: [folderId], references: [id], onDelete: Cascade)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}